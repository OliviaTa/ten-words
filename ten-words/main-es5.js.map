{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/sign-in/sign-in.component.ts","webpack:///src/app/auth/sign-in/sign-in.component.html","webpack:///src/app/auth/sign-up/sign-up.component.ts","webpack:///src/app/auth/sign-up/sign-up.component.html","webpack:///src/app/main-layout/main-layout.component.ts","webpack:///src/app/main-layout/main-layout.component.html","webpack:///src/app/notification/notification.component.ts","webpack:///src/app/notification/notification.component.html","webpack:///src/app/profile/components/settings/settings.component.ts","webpack:///src/app/profile/components/settings/settings.component.html","webpack:///src/app/profile/components/themes/themes.component.ts","webpack:///src/app/profile/components/themes/themes.component.html","webpack:///src/app/profile/first-config/first-config.component.ts","webpack:///src/app/profile/first-config/first-config.service.ts","webpack:///src/app/profile/first-config/step-one/step-one.component.ts","webpack:///src/app/profile/first-config/step-one/step-one.component.html","webpack:///src/app/profile/first-config/step-two/step-two.component.ts","webpack:///src/app/profile/first-config/step-two/step-two.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/profile/profile.service.ts","webpack:///src/app/providers/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","redirectTo","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthComponent","AuthGuard","userService","router","route","state","tmpUser","navigateByUrl","providedIn","AuthService","http","params","post","pipe","user","SignInComponent","formBuilder","authService","form","group","email","password","required","valid","signIn","value","subscribe","next","console","log","error","err","onSubmit","SignUpComponent","nickname","birthday","signUp","MainLayoutComponent","signOut","onSignOut","NotificationComponent","data","preClose","dismissNotification","SettingsComponent","methods","type","name","settings","method","wordsAmount","settingChange","emit","onChangeWordsAmount","ThemesComponent","profileService","themeChange","themes","getThemes","foundTheme","find","theme","isActive","filter","FirstConfigComponent","FirstConfigService","FirstConfigStepOneComponent","firstConfigService","map","length","onThemeChange","onNext","FirstConfigStepTwoComponent","snackBar","update","result","openFromComponent","duration","verticalPosition","horizontalPosition","dismiss","onSettingsChange","onStart","ProfileComponent","activeTab","isButtonVisible","Array","isArray","setActiveTab","ProfileService","get","includes","UserService","put","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthComponent } from './auth/auth.component';\nimport { MainLayoutComponent } from './main-layout/main-layout.component';\nimport { FirstConfigStepOneComponent } from './profile/first-config/step-one/step-one.component';\nimport { FirstConfigStepTwoComponent } from './profile/first-config/step-two/step-two.component';\nimport { SignInComponent } from './auth/sign-in/sign-in.component';\nimport { SignUpComponent } from './auth/sign-up/sign-up.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { AuthGuard } from './auth/auth.guard';\n\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    component: AuthComponent,\n    children: [\n      {\n        path: 'sign-in',\n        component: SignInComponent\n      },\n      {\n        path: 'sign-up',\n        component: SignUpComponent\n      },\n      {\n        path: '**',\n        redirectTo: 'sign-in'\n      }\n    ]\n  },\n  {\n    path: '',\n    component: MainLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'first-config/choose-themes',\n        component: FirstConfigStepOneComponent\n      },\n      {\n        path: 'first-config/settings',\n        component: FirstConfigStepTwoComponent\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: 'auth'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'ten-words';\n}\n","<router-outlet></router-outlet>\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { AuthService } from './auth/auth.service';\nimport { SignInComponent } from './auth/sign-in/sign-in.component';\nimport { SignUpComponent } from './auth/sign-up/sign-up.component';\nimport { MainLayoutComponent } from './main-layout/main-layout.component';\nimport { NotificationComponent } from './notification/notification.component';\nimport { SettingsComponent } from './profile/components/settings/settings.component';\nimport { ThemesComponent } from './profile/components/themes/themes.component';\nimport { FirstConfigComponent } from './profile/first-config/first-config.component';\nimport { FirstConfigService } from './profile/first-config/first-config.service';\nimport { FirstConfigStepOneComponent } from './profile/first-config/step-one/step-one.component';\nimport { FirstConfigStepTwoComponent } from './profile/first-config/step-two/step-two.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ProfileService } from './profile/profile.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainLayoutComponent,\n\n    AuthComponent,\n    SignInComponent,\n    SignUpComponent,\n\n    FirstConfigComponent,\n    FirstConfigStepOneComponent,\n    FirstConfigStepTwoComponent,\n\n    ProfileComponent,\n    ThemesComponent,\n    SettingsComponent,\n\n    NotificationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    BrowserAnimationsModule\n  ],\n  providers: [\n    AuthService,\n    FirstConfigService,\n    ProfileService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.less']\n})\nexport class AuthComponent { }\n","<div class=\"background\">\n  <div class=\"container\">\n    <div class=\"content\">\n      <h1>10 Words</h1>\n      <div class=\"form-container\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, Router } from '@angular/router';\nimport { UserService } from '../providers/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private userService: UserService,\n    private router: Router\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.userService.tmpUser) {\n      return true;\n    }\n\n    this.router.navigateByUrl('/auth');\n    return false;\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { tap } from 'rxjs/operators';\nimport { User, UserService } from '../providers/user.service';\n\ninterface SignInParams {\n  email: string;\n  password: string;\n}\n\ninterface SignUpParams {\n  email: string;\n  password: string;\n  nickname?: string;\n  birthday?: string;\n}\n\n@Injectable()\nexport class AuthService {\n\n  constructor(\n    private userService: UserService,\n    private http: HttpClient,\n    private router: Router\n  ) { }\n\n  public signIn(params: SignInParams) {\n\n    return this.http.post('http://localhost:3000/sign-in', params).pipe(tap((user: User) => this.userService.tmpUser = user));\n\n  }\n\n  public signUp(params: SignUpParams) {\n\n    return this.http.post('http://localhost:3000/sign-up', params).pipe(tap((user: User) => this.userService.tmpUser = user));\n\n  }\n\n  public signOut() {\n    this.userService.tmpUser = null;\n    this.router.navigateByUrl('/auth/sign-in');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: './sign-in.component.html',\n  styleUrls: [\n    './sign-in.component.less',\n    '../auth.component.less'\n  ]\n})\nexport class SignInComponent implements OnInit {\n  public form: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: ['', Validators.email],\n      password: ['', Validators.required]\n    });\n  }\n\n  public onSubmit() {\n    if (this.form.valid) {\n      this.authService.signIn(this.form.value).subscribe({\n        next: (user) => {\n          console.log(user);\n          this.router.navigateByUrl('/profile');\n        },\n        error: (err) => {\n          console.log(err);\n\n        }\n      });\n    }\n  }\n}\n","<form\n  class=\"form\"\n  [formGroup]=\"form\"\n  (ngSubmit)=\"onSubmit()\"\n>\n  <div class=\"field\">\n    <label for=\"email\">Email</label>\n    <input\n      formControlName=\"email\"\n      id=\"email\"\n      name=\"email\"\n      placeholder=\"Your email\"\n      type=\"email\"\n      required\n    />\n  </div>\n  <div class=\"field\">\n    <label for=\"password\">Password</label>\n    <input\n      formControlName=\"password\"\n      id=\"password\"\n      name=\"password\"\n      placeholder=\"Your password\"\n      type=\"password\"\n      required\n    />\n  </div>\n  <button class=\"button button_primary button_auto_size\">Sign In</button>\n</form>\n<div class=\"auth-link\">Are you not steal with us? Let’s <span routerLink=\"../sign-up\">Sign Up</span></div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: './sign-up.component.html',\n  styleUrls: [\n    './sign-up.component.less',\n    '../auth.component.less'\n  ]\n})\nexport class SignUpComponent implements OnInit {\n  public form: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: ['', Validators.email],\n      password: ['', Validators.required],\n      nickname: [''],\n      birthday: ['1995-09-16']\n    });\n  }\n\n  public onSubmit() {\n\n    if (this.form.valid) {\n      this.authService.signUp(this.form.value).subscribe({\n        next: (user) => {\n          console.log(user);\n          this.router.navigateByUrl('/first-config/choose-themes');\n        },\n        error: (err) => {\n          console.log(err);\n\n        }\n      });\n    }\n  }\n}\n","<form\n  class=\"form\"\n  [formGroup]=\"form\"\n  (ngSubmit)=\"onSubmit()\"\n>\n  <div class=\"field\">\n    <label for=\"email\">Email</label>\n    <input\n      formControlName=\"email\"\n      id=\"email\"\n      name=\"email\"\n      placeholder=\"Your email\"\n      type=\"email\"\n      required\n    />\n  </div>\n  <div class=\"field\">\n    <label for=\"password\">Password</label>\n    <input\n      formControlName=\"password\"\n      id=\"password\"\n      name=\"password\"\n      placeholder=\"Your password\"\n      type=\"password\"\n      required\n    />\n  </div>\n  <div class=\"field\">\n    <label for=\"nickname\">Nickname</label>\n    <input\n      formControlName=\"nickname\"\n      id=\"nickname\"\n      name=\"nickname\"\n      placeholder=\"Your nickname\"\n      type=\"text\"\n    />\n  </div>\n  <div class=\"field\">\n    <label for=\"birthday\">Birthday</label>\n    <input\n      formControlName=\"birthday\"\n      id=\"birthday\"\n      name=\"birthday\"\n      type=\"date\"\n    />\n  </div>\n  <button class=\"button button_primary button_auto_size\">Sign Up</button>\n</form>\n<div class=\"auth-link\">Do you already have your account? Let’s <span routerLink=\"../sign-in\">Sign In</span></div>\n","import { Component } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.less']\n})\nexport class MainLayoutComponent {\n\n  constructor(private authService: AuthService) { }\n\n  onSignOut() {\n    this.authService.signOut();\n  }\n}\n","<div class=\"container\">\n  <div class=\"header\">\n    <div class=\"logo\">10 Words</div>\n    <div\n      (click)=\"onSignOut()\"\n      class=\"sign-out\"\n    >Sign Out</div>\n  </div>\n  <div class=\"content\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.less']\n})\nexport class NotificationComponent {\n\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data) { }\n\n  dismissNotification() {\n    this.data.preClose();\n  }\n\n}\n","<div class=\"notification-container\">\n  <img src=\"../../assets/icons/king.svg\" />\n  <div class=\"notification-container__text\">\n    <div class=\"header\">Congratulations!</div>\n    <p>Your new live has started right now!</p>\n  </div>\n  <div\n    (click)=\"dismissNotification()\"\n    class=\"notification-container__close\"\n  ></div>\n</div>\n","import { Component, Output, EventEmitter } from '@angular/core';\nimport { UserService } from 'src/app/providers/user.service';\n\nexport interface SettingsOutput{\n  method: string;\n  wordsAmount: number;\n}\n\n@Component({\n  selector: 'app-settings-form',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.less']\n})\nexport class SettingsComponent {\n  public methods = [{\n    type: 'email',\n    name: 'Email notification'\n  },\n  {\n    type: 'telegram',\n    name: 'Telegram Bot'\n  }];\n\n  private user = this.userService.user;\n  public settings: SettingsOutput = {\n    method: this.user.method || 'email',\n    wordsAmount: this.user.wordsAmount || 5\n  };\n\n  @Output() settingChange = new EventEmitter<SettingsOutput>();\n\n  constructor(private userService: UserService) { }\n\n  onMethod(method) {\n    this.settings.method = method.type;\n\n    this.settingChange.emit(this.settings);\n  }\n\n  onChangeWordsAmount(value) {\n    if (value > 0 && value <= 20) {\n      this.settings.wordsAmount = value;\n    } else {\n      this.settings.wordsAmount = value <= 0 ? 1 : 20;\n    }\n\n    this.settingChange.emit(this.settings);\n  }\n}\n","<div class=\"content\">\n  <div class=\"methods\">\n    <div class=\"methods__inner\">\n      <div\n        *ngFor=\"let method of methods\"\n        [ngClass]=\"{ method_active: method.type === settings.method }\"\n        (click)=\"onMethod(method)\"\n        class=\"method\"\n      >\n        <div class=\"method__name\">{{ method.name }}</div>\n        <div class=\"method__image\"></div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"words-amount field\">\n    <label for=\"words-amount\">How many words?</label>\n    <input\n      [ngModel]=\"settings.wordsAmount\"\n      (ngModelChange)=\"onChangeWordsAmount($event)\"\n      min=\"1\"\n      id=\"words-amount\"\n      name=\"wordsAmount\"\n      type=\"number\"\n      required\n    />\n  </div>\n\n</div>\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { ProfileService } from 'src/app/profile/profile.service';\n\n@Component({\n  selector: 'app-themes-form',\n  templateUrl: './themes.component.html',\n  styleUrls: ['./themes.component.less']\n})\nexport class ThemesComponent {\n\n  @Output() themeChange = new EventEmitter();\n  public themes = [];\n\n  constructor(profileService: ProfileService) {\n    profileService.getThemes().subscribe({\n      next: (themes) => {\n        this.themes = themes;\n      }\n    });\n  }\n\n  onThemeClick(id: string) {\n    const foundTheme = this.themes.find((theme) => {\n      return theme.id === id;\n    });\n    foundTheme.isActive = !foundTheme.isActive;\n\n    this.themeChange.emit(this.themes.filter(theme => theme.isActive));\n  }\n\n}\n","<div class=\"themes\">\n  <div\n    *ngFor=\"let theme of themes\"\n    [ngClass]=\"{ theme_active: theme.isActive }\"\n    (click)=\"onThemeClick(theme.id)\"\n    class=\"theme\"\n  >\n    <div class=\"theme__line\">{{ theme.name }}</div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './first-config.component.html',\n  styleUrls: ['./first-config.component.less']\n})\nexport class FirstConfigComponent{\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class FirstConfigService {\n\n  data = {\n    themes: [],\n    method: 'email'\n  };\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FirstConfigService } from '../first-config.service';\n\n@Component({\n  templateUrl: './step-one.component.html',\n  styleUrls: ['./step-one.component.less']\n})\nexport class FirstConfigStepOneComponent {\n\n  public themes = [];\n\n  constructor(\n    private firstConfigService: FirstConfigService,\n    private router: Router,\n  ) { }\n\n  onThemeChange(themes){\n    this.themes = themes;\n  }\n\n  onNext() {\n\n    this.firstConfigService.data.themes = this.themes\n      .map((theme) => theme.id);\n    console.log(this.firstConfigService.data);\n\n    if (this.firstConfigService.data.themes.length !== 0) {\n      this.router.navigateByUrl('first-config/settings');\n    }\n\n  }\n\n}\n","<div class=\"step-one\">\n  <h1 class=\"title\">Choose themes</h1>\n  <p class=\"title-subtext\">These themes will be used to create your own set of words for learning</p>\n  <div class=\"step-one__container\">\n    <app-themes-form (themeChange)=\"onThemeChange($event)\"></app-themes-form>\n  </div>\n  <button\n    (click)=\"onNext()\"\n    type=\"button\"\n    class=\"button button_primary\"\n  >Next</button>\n</div>\n","import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/providers/user.service';\nimport { FirstConfigService } from '../first-config.service';\nimport { NotificationComponent } from 'src/app/notification/notification.component';\n\n@Component({\n  templateUrl: './step-two.component.html',\n  styleUrls: ['./step-two.component.less'],\n})\nexport class FirstConfigStepTwoComponent {\n\n  private data = {\n    themes: this.firstConfigService.data.themes,\n  };\n\n  constructor(\n    private userService: UserService,\n    private firstConfigService: FirstConfigService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) {\n    if (this.data.themes.length === 0) {\n      this.router.navigateByUrl('/first-config/choose-themes');\n    }\n\n  }\n\n  onSettingsChange(settings) {\n    this.data = {\n      ...this.data,\n      ...settings\n    };\n  }\n\n  onStart() {\n    this.userService.update({ data: this.data }).subscribe({\n      next: (result) => {\n        console.log(result);\n        this.router.navigateByUrl('/profile').then(() => {\n          this.snackBar.openFromComponent(NotificationComponent, {\n            duration: 1000000,\n            verticalPosition: 'top',\n            horizontalPosition: 'end',\n            data: { preClose: () => { this.snackBar.dismiss(); } }\n          });\n        });\n      }\n    });\n  }\n}\n","<div class=\"step-two\">\n  <h1 class=\"title\">Way to get words</h1>\n  <p class=\"title-subtext\">Set where and how often you want to get words for learning</p>\n  <div class=\"step-two__container\">\n    <app-settings-form (settingChange)=\"onSettingsChange($event)\"></app-settings-form>\n  </div>\n  <button\n    (click)=\"onStart()\"\n    type=\"button\"\n    class=\"button button_primary\"\n  >Start</button>\n</div>\n","import { Component } from '@angular/core';\nimport { UserService } from '../providers/user.service';\n\n@Component({\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.less']\n})\nexport class ProfileComponent {\n\n  public activeTab = 'themes';\n  public isButtonVisible = false;\n\n  private data = {};\n\n  constructor(private userService: UserService) { }\n\n  onChangeData(data) {\n    if (Array.isArray(data)) {\n      data = { themes: data.map((theme) => theme.id) };\n    }\n\n    this.data = {\n      ...this.data,\n      ...data\n    };\n\n    this.userService.tmpUser = {\n      ...this.userService.tmpUser,\n      ...this.data\n    };\n\n    this.isButtonVisible = true;\n  }\n\n  setActiveTab(activeTab) {\n    this.activeTab = activeTab;\n  }\n\n  onSave() {\n    this.userService.update({ data: this.data })\n      .subscribe({\n        next: (user) => {\n          console.log(user);\n          this.isButtonVisible = false;\n        }\n      });\n  }\n\n}\n","<div class=\"profile\">\n  <div class=\"profile-menu\">\n    <div\n      (click)=\"setActiveTab('themes')\"\n      [ngClass]=\"{ 'profile-menu__item_active': activeTab === 'themes' }\"\n      class=\"profile-menu__item\"\n    >Themes</div>\n    <div\n      (click)=\"setActiveTab('settings')\"\n      [ngClass]=\"{ 'profile-menu__item_active': activeTab === 'settings' }\"\n      class=\"profile-menu__item\"\n    >Settings</div>\n  </div>\n\n  <div\n    class=\"profile__container\"\n    [ngSwitch]=\"activeTab\"\n  >\n    <app-themes-form\n      *ngSwitchCase=\"'themes'\"\n      (themeChange)=\"onChangeData($event)\"\n    ></app-themes-form>\n    <app-settings-form\n      *ngSwitchCase=\"'settings'\"\n      (settingChange)=\"onChangeData($event)\"\n    ></app-settings-form>\n  </div>\n  <button\n    *ngIf=\"isButtonVisible\"\n    (click)=\"onSave()\"\n    class=\"button button_primary\"\n  >Save</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { UserService } from '../providers/user.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class ProfileService {\n\n  constructor(private userService: UserService, private http: HttpClient) { }\n\n  public getThemes() {\n    const user = this.userService.user;\n    return this.http.get<any[]>('http://localhost:3000/themes').pipe(\n      map((themes) => {\n        return themes.map((theme) => {\n          return {\n            ...theme,\n            isActive: user.themes.includes(theme.id)\n          };\n        });\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of, throwError } from 'rxjs';\nimport { provideRoutes } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\n\nexport interface User {\n  id: string;\n  email: string;\n  password?: string;\n  nickname?: string;\n  birthday?: string;\n  themes: string[];\n  method: string;\n  wordsAmount: number;\n\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  public tmpUser: User;\n\n  // public tmpUser;\n\n  get user() {\n    return this.tmpUser;\n  }\n\n  constructor(private http: HttpClient){}\n\n\n  public update(params: { data: any }) {\n    return this.http.put('http://localhost:3000/user', params.data).pipe(tap((user: User) => this.tmpUser = user));\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}