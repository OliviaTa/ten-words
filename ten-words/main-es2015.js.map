{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/auth/sign-in/sign-in.component.ts","./src/app/auth/sign-in/sign-in.component.html","./src/app/auth/sign-up/sign-up.component.ts","./src/app/auth/sign-up/sign-up.component.html","./src/app/main-layout/main-layout.component.ts","./src/app/main-layout/main-layout.component.html","./src/app/notification/notification.component.ts","./src/app/notification/notification.component.html","./src/app/profile/components/settings/settings.component.ts","./src/app/profile/components/settings/settings.component.html","./src/app/profile/components/themes/themes.component.ts","./src/app/profile/components/themes/themes.component.html","./src/app/profile/first-config/first-config.component.ts","./src/app/profile/first-config/first-config.service.ts","./src/app/profile/first-config/step-one/step-one.component.ts","./src/app/profile/first-config/step-one/step-one.component.html","./src/app/profile/first-config/step-two/step-two.component.ts","./src/app/profile/first-config/step-two/step-two.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/profile/profile.service.ts","./src/app/providers/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthComponent } from './auth/auth.component';\nimport { MainLayoutComponent } from './main-layout/main-layout.component';\nimport { FirstConfigStepOneComponent } from './profile/first-config/step-one/step-one.component';\nimport { FirstConfigStepTwoComponent } from './profile/first-config/step-two/step-two.component';\nimport { SignInComponent } from './auth/sign-in/sign-in.component';\nimport { SignUpComponent } from './auth/sign-up/sign-up.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { AuthGuard } from './auth/auth.guard';\n\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    component: AuthComponent,\n    children: [\n      {\n        path: 'sign-in',\n        component: SignInComponent\n      },\n      {\n        path: 'sign-up',\n        component: SignUpComponent\n      },\n      {\n        path: '**',\n        redirectTo: 'sign-in'\n      }\n    ]\n  },\n  {\n    path: '',\n    component: MainLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'first-config/choose-themes',\n        component: FirstConfigStepOneComponent\n      },\n      {\n        path: 'first-config/settings',\n        component: FirstConfigStepTwoComponent\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: 'auth'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'ten-words';\n}\n","<router-outlet></router-outlet>\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { AuthService } from './auth/auth.service';\nimport { SignInComponent } from './auth/sign-in/sign-in.component';\nimport { SignUpComponent } from './auth/sign-up/sign-up.component';\nimport { MainLayoutComponent } from './main-layout/main-layout.component';\nimport { NotificationComponent } from './notification/notification.component';\nimport { SettingsComponent } from './profile/components/settings/settings.component';\nimport { ThemesComponent } from './profile/components/themes/themes.component';\nimport { FirstConfigComponent } from './profile/first-config/first-config.component';\nimport { FirstConfigService } from './profile/first-config/first-config.service';\nimport { FirstConfigStepOneComponent } from './profile/first-config/step-one/step-one.component';\nimport { FirstConfigStepTwoComponent } from './profile/first-config/step-two/step-two.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ProfileService } from './profile/profile.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainLayoutComponent,\n\n    AuthComponent,\n    SignInComponent,\n    SignUpComponent,\n\n    FirstConfigComponent,\n    FirstConfigStepOneComponent,\n    FirstConfigStepTwoComponent,\n\n    ProfileComponent,\n    ThemesComponent,\n    SettingsComponent,\n\n    NotificationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    BrowserAnimationsModule\n  ],\n  providers: [\n    AuthService,\n    FirstConfigService,\n    ProfileService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.less']\n})\nexport class AuthComponent { }\n","<div class=\"background\">\n  <div class=\"container\">\n    <div class=\"content\">\n      <h1>10 Words</h1>\n      <div class=\"form-container\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, Router } from '@angular/router';\nimport { UserService } from '../providers/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private userService: UserService,\n    private router: Router\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.userService.tmpUser) {\n      return true;\n    }\n\n    this.router.navigateByUrl('/auth');\n    return false;\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { tap } from 'rxjs/operators';\nimport { User, UserService } from '../providers/user.service';\n\ninterface SignInParams {\n  email: string;\n  password: string;\n}\n\ninterface SignUpParams {\n  email: string;\n  password: string;\n  nickname?: string;\n  birthday?: string;\n}\n\n@Injectable()\nexport class AuthService {\n\n  constructor(\n    private userService: UserService,\n    private http: HttpClient,\n    private router: Router\n  ) { }\n\n  public signIn(params: SignInParams) {\n\n    return this.http.post('http://localhost:3000/sign-in', params).pipe(tap((user: User) => this.userService.tmpUser = user));\n\n  }\n\n  public signUp(params: SignUpParams) {\n\n    return this.http.post('http://localhost:3000/sign-up', params).pipe(tap((user: User) => this.userService.tmpUser = user));\n\n  }\n\n  public signOut() {\n    this.userService.tmpUser = null;\n    this.router.navigateByUrl('/auth/sign-in');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: './sign-in.component.html',\n  styleUrls: [\n    './sign-in.component.less',\n    '../auth.component.less'\n  ]\n})\nexport class SignInComponent implements OnInit {\n  public form: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: ['', Validators.email],\n      password: ['', Validators.required]\n    });\n  }\n\n  public onSubmit() {\n    if (this.form.valid) {\n      this.authService.signIn(this.form.value).subscribe({\n        next: (user) => {\n          console.log(user);\n          this.router.navigateByUrl('/profile');\n        },\n        error: (err) => {\n          console.log(err);\n\n        }\n      });\n    }\n  }\n}\n","<form\n  class=\"form\"\n  [formGroup]=\"form\"\n  (ngSubmit)=\"onSubmit()\"\n>\n  <div class=\"field\">\n    <label for=\"email\">Email</label>\n    <input\n      formControlName=\"email\"\n      id=\"email\"\n      name=\"email\"\n      placeholder=\"Your email\"\n      type=\"email\"\n      required\n    />\n  </div>\n  <div class=\"field\">\n    <label for=\"password\">Password</label>\n    <input\n      formControlName=\"password\"\n      id=\"password\"\n      name=\"password\"\n      placeholder=\"Your password\"\n      type=\"password\"\n      required\n    />\n  </div>\n  <button class=\"button button_primary button_auto_size\">Sign In</button>\n</form>\n<div class=\"auth-link\">Are you not steal with us? Let’s <span routerLink=\"../sign-up\">Sign Up</span></div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: './sign-up.component.html',\n  styleUrls: [\n    './sign-up.component.less',\n    '../auth.component.less'\n  ]\n})\nexport class SignUpComponent implements OnInit {\n  public form: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: ['', Validators.email],\n      password: ['', Validators.required],\n      nickname: [''],\n      birthday: ['1995-09-16']\n    });\n  }\n\n  public onSubmit() {\n\n    if (this.form.valid) {\n      this.authService.signUp(this.form.value).subscribe({\n        next: (user) => {\n          console.log(user);\n          this.router.navigateByUrl('/first-config/choose-themes');\n        },\n        error: (err) => {\n          console.log(err);\n\n        }\n      });\n    }\n  }\n}\n","<form\n  class=\"form\"\n  [formGroup]=\"form\"\n  (ngSubmit)=\"onSubmit()\"\n>\n  <div class=\"field\">\n    <label for=\"email\">Email</label>\n    <input\n      formControlName=\"email\"\n      id=\"email\"\n      name=\"email\"\n      placeholder=\"Your email\"\n      type=\"email\"\n      required\n    />\n  </div>\n  <div class=\"field\">\n    <label for=\"password\">Password</label>\n    <input\n      formControlName=\"password\"\n      id=\"password\"\n      name=\"password\"\n      placeholder=\"Your password\"\n      type=\"password\"\n      required\n    />\n  </div>\n  <div class=\"field\">\n    <label for=\"nickname\">Nickname</label>\n    <input\n      formControlName=\"nickname\"\n      id=\"nickname\"\n      name=\"nickname\"\n      placeholder=\"Your nickname\"\n      type=\"text\"\n    />\n  </div>\n  <div class=\"field\">\n    <label for=\"birthday\">Birthday</label>\n    <input\n      formControlName=\"birthday\"\n      id=\"birthday\"\n      name=\"birthday\"\n      type=\"date\"\n    />\n  </div>\n  <button class=\"button button_primary button_auto_size\">Sign Up</button>\n</form>\n<div class=\"auth-link\">Do you already have your account? Let’s <span routerLink=\"../sign-in\">Sign In</span></div>\n","import { Component } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.less']\n})\nexport class MainLayoutComponent {\n\n  constructor(private authService: AuthService) { }\n\n  onSignOut() {\n    this.authService.signOut();\n  }\n}\n","<div class=\"container\">\n  <div class=\"header\">\n    <div class=\"logo\">10 Words</div>\n    <div\n      (click)=\"onSignOut()\"\n      class=\"sign-out\"\n    >Sign Out</div>\n  </div>\n  <div class=\"content\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.less']\n})\nexport class NotificationComponent {\n\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data) { }\n\n  dismissNotification() {\n    this.data.preClose();\n  }\n\n}\n","<div class=\"notification-container\">\n  <img src=\"../../assets/icons/king.svg\" />\n  <div class=\"notification-container__text\">\n    <div class=\"header\">Congratulations!</div>\n    <p>Your new live has started right now!</p>\n  </div>\n  <div\n    (click)=\"dismissNotification()\"\n    class=\"notification-container__close\"\n  ></div>\n</div>\n","import { Component, Output, EventEmitter } from '@angular/core';\nimport { UserService } from 'src/app/providers/user.service';\n\nexport interface SettingsOutput{\n  method: string;\n  wordsAmount: number;\n}\n\n@Component({\n  selector: 'app-settings-form',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.less']\n})\nexport class SettingsComponent {\n  public methods = [{\n    type: 'email',\n    name: 'Email notification'\n  },\n  {\n    type: 'telegram',\n    name: 'Telegram Bot'\n  }];\n\n  private user = this.userService.user;\n  public settings: SettingsOutput = {\n    method: this.user.method || 'email',\n    wordsAmount: this.user.wordsAmount || 5\n  };\n\n  @Output() settingChange = new EventEmitter<SettingsOutput>();\n\n  constructor(private userService: UserService) { }\n\n  onMethod(method) {\n    this.settings.method = method.type;\n\n    this.settingChange.emit(this.settings);\n  }\n\n  onChangeWordsAmount(value) {\n    if (value > 0 && value <= 20) {\n      this.settings.wordsAmount = value;\n    } else {\n      this.settings.wordsAmount = value <= 0 ? 1 : 20;\n    }\n\n    this.settingChange.emit(this.settings);\n  }\n}\n","<div class=\"content\">\n  <div class=\"methods\">\n    <div class=\"methods__inner\">\n      <div\n        *ngFor=\"let method of methods\"\n        [ngClass]=\"{ method_active: method.type === settings.method }\"\n        (click)=\"onMethod(method)\"\n        class=\"method\"\n      >\n        <div class=\"method__name\">{{ method.name }}</div>\n        <div class=\"method__image\"></div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"words-amount field\">\n    <label for=\"words-amount\">How many words?</label>\n    <input\n      [ngModel]=\"settings.wordsAmount\"\n      (ngModelChange)=\"onChangeWordsAmount($event)\"\n      min=\"1\"\n      id=\"words-amount\"\n      name=\"wordsAmount\"\n      type=\"number\"\n      required\n    />\n  </div>\n\n</div>\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { ProfileService } from 'src/app/profile/profile.service';\n\n@Component({\n  selector: 'app-themes-form',\n  templateUrl: './themes.component.html',\n  styleUrls: ['./themes.component.less']\n})\nexport class ThemesComponent {\n\n  @Output() themeChange = new EventEmitter();\n  public themes = [];\n\n  constructor(profileService: ProfileService) {\n    profileService.getThemes().subscribe({\n      next: (themes) => {\n        this.themes = themes;\n      }\n    });\n  }\n\n  onThemeClick(id: string) {\n    const foundTheme = this.themes.find((theme) => {\n      return theme.id === id;\n    });\n    foundTheme.isActive = !foundTheme.isActive;\n\n    this.themeChange.emit(this.themes.filter(theme => theme.isActive));\n  }\n\n}\n","<div class=\"themes\">\n  <div\n    *ngFor=\"let theme of themes\"\n    [ngClass]=\"{ theme_active: theme.isActive }\"\n    (click)=\"onThemeClick(theme.id)\"\n    class=\"theme\"\n  >\n    <div class=\"theme__line\">{{ theme.name }}</div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './first-config.component.html',\n  styleUrls: ['./first-config.component.less']\n})\nexport class FirstConfigComponent{\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class FirstConfigService {\n\n  data = {\n    themes: [],\n    method: 'email'\n  };\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FirstConfigService } from '../first-config.service';\n\n@Component({\n  templateUrl: './step-one.component.html',\n  styleUrls: ['./step-one.component.less']\n})\nexport class FirstConfigStepOneComponent {\n\n  public themes = [];\n\n  constructor(\n    private firstConfigService: FirstConfigService,\n    private router: Router,\n  ) { }\n\n  onThemeChange(themes){\n    this.themes = themes;\n  }\n\n  onNext() {\n\n    this.firstConfigService.data.themes = this.themes\n      .map((theme) => theme.id);\n    console.log(this.firstConfigService.data);\n\n    if (this.firstConfigService.data.themes.length !== 0) {\n      this.router.navigateByUrl('first-config/settings');\n    }\n\n  }\n\n}\n","<div class=\"step-one\">\n  <h1 class=\"title\">Choose themes</h1>\n  <p class=\"title-subtext\">These themes will be used to create your own set of words for learning</p>\n  <div class=\"step-one__container\">\n    <app-themes-form (themeChange)=\"onThemeChange($event)\"></app-themes-form>\n  </div>\n  <button\n    (click)=\"onNext()\"\n    type=\"button\"\n    class=\"button button_primary\"\n  >Next</button>\n</div>\n","import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/providers/user.service';\nimport { FirstConfigService } from '../first-config.service';\nimport { NotificationComponent } from 'src/app/notification/notification.component';\n\n@Component({\n  templateUrl: './step-two.component.html',\n  styleUrls: ['./step-two.component.less'],\n})\nexport class FirstConfigStepTwoComponent {\n\n  private data = {\n    themes: this.firstConfigService.data.themes,\n  };\n\n  constructor(\n    private userService: UserService,\n    private firstConfigService: FirstConfigService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) {\n    if (this.data.themes.length === 0) {\n      this.router.navigateByUrl('/first-config/choose-themes');\n    }\n\n  }\n\n  onSettingsChange(settings) {\n    this.data = {\n      ...this.data,\n      ...settings\n    };\n  }\n\n  onStart() {\n    this.userService.update({ data: this.data }).subscribe({\n      next: (result) => {\n        console.log(result);\n        this.router.navigateByUrl('/profile').then(() => {\n          this.snackBar.openFromComponent(NotificationComponent, {\n            duration: 1000000,\n            verticalPosition: 'top',\n            horizontalPosition: 'end',\n            data: { preClose: () => { this.snackBar.dismiss(); } }\n          });\n        });\n      }\n    });\n  }\n}\n","<div class=\"step-two\">\n  <h1 class=\"title\">Way to get words</h1>\n  <p class=\"title-subtext\">Set where and how often you want to get words for learning</p>\n  <div class=\"step-two__container\">\n    <app-settings-form (settingChange)=\"onSettingsChange($event)\"></app-settings-form>\n  </div>\n  <button\n    (click)=\"onStart()\"\n    type=\"button\"\n    class=\"button button_primary\"\n  >Start</button>\n</div>\n","import { Component } from '@angular/core';\nimport { UserService } from '../providers/user.service';\n\n@Component({\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.less']\n})\nexport class ProfileComponent {\n\n  public activeTab = 'themes';\n  public isButtonVisible = false;\n\n  private data = {};\n\n  constructor(private userService: UserService) { }\n\n  onChangeData(data) {\n    if (Array.isArray(data)) {\n      data = { themes: data.map((theme) => theme.id) };\n    }\n\n    this.data = {\n      ...this.data,\n      ...data\n    };\n\n    this.userService.tmpUser = {\n      ...this.userService.tmpUser,\n      ...this.data\n    };\n\n    this.isButtonVisible = true;\n  }\n\n  setActiveTab(activeTab) {\n    this.activeTab = activeTab;\n  }\n\n  onSave() {\n    this.userService.update({ data: this.data })\n      .subscribe({\n        next: (user) => {\n          console.log(user);\n          this.isButtonVisible = false;\n        }\n      });\n  }\n\n}\n","<div class=\"profile\">\n  <div class=\"profile-menu\">\n    <div\n      (click)=\"setActiveTab('themes')\"\n      [ngClass]=\"{ 'profile-menu__item_active': activeTab === 'themes' }\"\n      class=\"profile-menu__item\"\n    >Themes</div>\n    <div\n      (click)=\"setActiveTab('settings')\"\n      [ngClass]=\"{ 'profile-menu__item_active': activeTab === 'settings' }\"\n      class=\"profile-menu__item\"\n    >Settings</div>\n  </div>\n\n  <div\n    class=\"profile__container\"\n    [ngSwitch]=\"activeTab\"\n  >\n    <app-themes-form\n      *ngSwitchCase=\"'themes'\"\n      (themeChange)=\"onChangeData($event)\"\n    ></app-themes-form>\n    <app-settings-form\n      *ngSwitchCase=\"'settings'\"\n      (settingChange)=\"onChangeData($event)\"\n    ></app-settings-form>\n  </div>\n  <button\n    *ngIf=\"isButtonVisible\"\n    (click)=\"onSave()\"\n    class=\"button button_primary\"\n  >Save</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { UserService } from '../providers/user.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class ProfileService {\n\n  constructor(private userService: UserService, private http: HttpClient) { }\n\n  public getThemes() {\n    const user = this.userService.user;\n    return this.http.get<any[]>('http://localhost:3000/themes').pipe(\n      map((themes) => {\n        return themes.map((theme) => {\n          return {\n            ...theme,\n            isActive: user.themes.includes(theme.id)\n          };\n        });\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of, throwError } from 'rxjs';\nimport { provideRoutes } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\n\nexport interface User {\n  id: string;\n  email: string;\n  password?: string;\n  nickname?: string;\n  birthday?: string;\n  themes: string[];\n  method: string;\n  wordsAmount: number;\n\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  public tmpUser: User;\n\n  // public tmpUser;\n\n  get user() {\n    return this.tmpUser;\n  }\n\n  constructor(private http: HttpClient){}\n\n\n  public update(params: { data: any }) {\n    return this.http.put('http://localhost:3000/user', params.data).pipe(tap((user: User) => this.tmpUser = user));\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}